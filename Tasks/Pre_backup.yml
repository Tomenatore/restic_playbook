---
# tasks/pre_backup_tasks.yml
# Pre-Backup Tasks - Executed BEFORE backup runs

# ========================================
# SERVICE MANAGEMENT
# ========================================

- name: Stop nginx for consistent backup
  ansible.builtin.service:
    name: nginx
    state: stopped
  ignore_errors: yes

# ========================================
# DATABASE DUMPS
# ========================================

- name: Create MySQL dump
  community.mysql.mysql_db:
    name: all
    state: dump
    target: /var/backups/mysql-dump.sql
    login_unix_socket: /var/lib/mysql/mysql.sock
  ignore_errors: yes

- name: Create PostgreSQL dump
  community.postgresql.postgresql_db:
    name: all
    state: dump
    target: /var/backups/postgres-dump.sql
  become_user: postgres
  ignore_errors: yes

# ========================================
# DOCKER CONTAINERS
# ========================================

- name: Stop Docker containers
  community.docker.docker_container:
    name: "{{ item }}"
    state: stopped
  loop:
    - webapp
    - redis
    - postgres
  ignore_errors: yes

# ========================================
# APPLICATION PREPARATION
# ========================================

- name: Flush Redis to disk
  ansible.builtin.command:
    cmd: redis-cli BGSAVE
  ignore_errors: yes

- name: Archive application logs
  community.general.archive:
    path: /var/log/myapp/*.log
    dest: /var/backups/app-logs.tar.gz
    format: gz
  ignore_errors: yes

- name: Enable maintenance mode
  ansible.builtin.file:
    path: /var/www/html/maintenance.flag
    state: touch
    mode: '0644'
  ignore_errors: yes

# ========================================
# CUSTOM SCRIPTS
# ========================================

- name: Run custom preparation script
  ansible.builtin.script: /usr/local/bin/pre-backup.sh
  ignore_errors: yes

- name: Log pre-backup notification
  ansible.builtin.debug:
    msg: "Pre-backup tasks completed, starting backup..."