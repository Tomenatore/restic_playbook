---
# roles/restic/tasks/scripts_and_hooks.yml
# Deploy backup scripts, helper scripts, and pre/post backup hooks

# ========================================
# BACKUP AND MONITORING SCRIPTS
# ========================================

- name: Deploy CheckMK status script
  ansible.builtin.template:
    src: scripts/checkmk-status.sh.j2
    dest: "{{ restic_scripts_dir }}/checkmk-status.sh"
    mode: '0755'
    owner: root
    group: root

- name: Deploy backup and scan scripts for each source
  ansible.builtin.template:
    src: "scripts/{{ item.1 }}.sh.j2"
    dest: "{{ restic_scripts_dir }}/{{ item.1 }}-{{ item.0.name }}.sh"
    mode: '0755'
    owner: root
    group: root
  loop: "{{ restic_backup_sources | selectattr('enabled') | list | product(['backup', 'scan']) }}"
  loop_control:
    label: "{{ item.1 }}-{{ item.0.name }}"

# ========================================
# HELPER SCRIPTS
# ========================================

- name: Create helper scripts directory
  ansible.builtin.file:
    path: "{{ restic_helpers_dir }}"
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Deploy helper scripts
  ansible.builtin.template:
    src: "scripts/{{ item }}.sh.j2"
    dest: "{{ restic_helpers_dir }}/{{ item }}.sh"
    mode: '0755'
    owner: root
    group: root
  loop:
    - restic-restore
    - restic-repo-info
  loop_control:
    label: "{{ item }}"

# ========================================
# PRE/POST BACKUP HOOKS
# ========================================
#
# Hooks use Restic's native hook system (RESTIC_PRE_SCRIPT, RESTIC_POST_SCRIPT)
#
# Option 1: Global hooks directory (restic_custom_hooks_dir)
#   - Copies hooks from control node: pre-backup-<source>.sh, post-backup-<source>.sh
#
# Option 2: Per-source hook scripts (item.hook_pre_script, item.hook_post_script)
#   - Copies specific hook script per source
#
# Option 3: Manual hook management
#   - User manually creates hooks on target hosts in restic_hooks_dir
#
# Note: Hooks are optional. If not present, backup runs without hooks.

- name: Copy hooks from custom directory (pre and post)
  ansible.builtin.copy:
    src: "{{ restic_custom_hooks_dir }}/{{ item.1 }}-backup-{{ item.0.name }}.sh"
    dest: "{{ item.0.hook_script_dir | default(restic_hooks_dir) }}/{{ item.1 }}-backup-{{ item.0.name }}.sh"
    mode: '0755'
    owner: root
    group: root
  loop: "{{ restic_backup_sources | selectattr('enabled') | list | product(['pre', 'post']) }}"
  loop_control:
    label: "{{ item.1 }}-{{ item.0.name }}"
  when:
    - restic_custom_hooks_dir | length > 0
    - (item.1 == 'pre' and item.0.hook_pre_script is not defined) or
      (item.1 == 'post' and item.0.hook_post_script is not defined)
  ignore_errors: yes  # Hook might not exist for this source

- name: Copy per-source hook scripts (pre and post)
  block:
    - name: Copy per-source pre-backup hook scripts
      ansible.builtin.copy:
        src: "{{ item.hook_pre_script }}"
        dest: "{{ item.hook_script_dir | default(restic_hooks_dir) }}/pre-backup-{{ item.name }}.sh"
        mode: '0755'
        owner: root
        group: root
      loop: "{{ restic_backup_sources | selectattr('enabled') | list }}"
      loop_control:
        label: "pre-{{ item.name }}"
      when:
        - item.hook_pre_script is defined
        - item.hook_pre_script | length > 0

    - name: Copy per-source post-backup hook scripts
      ansible.builtin.copy:
        src: "{{ item.hook_post_script }}"
        dest: "{{ item.hook_script_dir | default(restic_hooks_dir) }}/post-backup-{{ item.name }}.sh"
        mode: '0755'
        owner: root
        group: root
      loop: "{{ restic_backup_sources | selectattr('enabled') | list }}"
      loop_control:
        label: "post-{{ item.name }}"
      when:
        - item.hook_post_script is defined
        - item.hook_post_script | length > 0
