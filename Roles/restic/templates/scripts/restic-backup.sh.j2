#!/bin/bash
# Restic Backup Script for {{ item.name }}
# Generated by Ansible - DO NOT EDIT MANUALLY

set -e
set -o pipefail

# Source configuration
SOURCE_NAME="{{ item.name }}"
SOURCE_PATH="{{ item.path }}"
SOURCE_TAGS="{{ item.tags | join(' ') }}"
EXCLUDE_FILE="{{ restic_config_dir }}/excludes.txt"

# Logging
LOG_TAG="restic-backup-${SOURCE_NAME}"

# Check if source exists
if [ ! -d "${SOURCE_PATH}" ] && [ ! -f "${SOURCE_PATH}" ]; then
    logger -t "${LOG_TAG}" -p user.error "Source path does not exist: ${SOURCE_PATH}"
    exit 1
fi

# Log start
logger -t "${LOG_TAG}" -p user.info "Starting backup for ${SOURCE_NAME}"

# Build restic command arguments
RESTIC_ARGS=(
    backup
    "${SOURCE_PATH}"
    --tag auto
    --tag "${SOURCE_NAME}"
    --limit-upload {{ restic_upload_limit_kbps }}
    --limit-download {{ restic_download_limit_kbps }}
    --json
)

# Add exclusions if file exists
[ -f "${EXCLUDE_FILE}" ] && RESTIC_ARGS+=(--exclude-file="${EXCLUDE_FILE}")

# Add user tags
for TAG in ${SOURCE_TAGS}; do
    RESTIC_ARGS+=(--tag "${TAG}")
done

# Add force rescan if configured globally
{% if restic_force_rescan %}
RESTIC_ARGS+=(--force)
{% endif %}

# Check force rescan day
{% if restic_force_rescan_day > 0 %}
CURRENT_DAY=$(date +%d)
if [ "${CURRENT_DAY}" = "{{ restic_force_rescan_day }}" ]; then
    RESTIC_ARGS+=(--force)
    logger -t "${LOG_TAG}" -p user.info "Force rescan enabled (day ${CURRENT_DAY})"
fi
{% endif %}

# Execute backup
logger -t "${LOG_TAG}" -p user.info "Executing: restic ${RESTIC_ARGS[*]}"

if restic "${RESTIC_ARGS[@]}" 2>&1 | logger -t "${LOG_TAG}" -p user.info; then
    logger -t "${LOG_TAG}" -p user.info "Backup completed successfully for ${SOURCE_NAME}"
    exit 0
else
    EXIT_CODE=$?
    if [ ${EXIT_CODE} -eq 3 ]; then
{% if restic_allow_incomplete_backup %}
        logger -t "${LOG_TAG}" -p user.warning "Backup completed with warnings (incomplete snapshot) for ${SOURCE_NAME}"
        exit 0
{% else %}
        logger -t "${LOG_TAG}" -p user.error "Backup incomplete for ${SOURCE_NAME} (some files unreadable)"
        exit 3
{% endif %}
    else
        logger -t "${LOG_TAG}" -p user.error "Backup failed for ${SOURCE_NAME} with exit code ${EXIT_CODE}"
        exit ${EXIT_CODE}
    fi
fi
