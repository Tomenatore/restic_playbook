---
# playbook.yml
# ========================================
# Restic Backup Playbook (Systemd-Based)
# ========================================

- name: Deploy Restic Backup System
  hosts: all
  become: yes

  roles:
    - restic

# ========================================
# CONFIGURATION
# ========================================
#
# Configure the role in:
# - group_vars/all/vars.yml         (General settings)
# - group_vars/all/vault.yml        (Encrypted secrets)
# - inventory/hosts.ini             (Server list)
# - group_vars/<group>/vars.yml     (Group-specific)
#
# ========================================
# SYSTEMD DEPLOYMENT
# ========================================
#
# This playbook deploys systemd units and timers.
# Backups are NOT executed by Ansible but by systemd timers.
#
# Deployment:
#   ansible-playbook playbook.yml --ask-vault-pass
#
# Syntax check:
#   ansible-playbook playbook.yml --syntax-check
#
# Dry-run:
#   ansible-playbook playbook.yml --check --ask-vault-pass
#
# ========================================
# SYSTEMD MANAGEMENT
# ========================================
#
# List all restic timers:
#   systemctl list-timers 'restic-*'
#
# Check status of specific backup:
#   systemctl status restic-backup@var-www.timer
#   systemctl status restic-backup@var-www.service
#
# View logs:
#   journalctl -u 'restic-backup@*' -f
#   journalctl -u restic-backup@var-www.service
#
# Manual trigger:
#   systemctl start restic-backup@var-www.service
#
# Enable/disable timers:
#   systemctl enable restic-backup@var-www.timer
#   systemctl disable restic-backup@var-www.timer
#
# ========================================
# MONITORING
# ========================================
#
# Check_MK integration:
#   - Each systemd unit reports to CheckMK with custom tags
#   - Service names: Restic_backup_<source>, Restic_prune_<source>, etc.
#   - Spool directory: /var/lib/check_mk_agent/spool
#
# Syslog:
#   - All operations logged to syslog with tag 'restic'
#   - Facility: local0
#
# ========================================
# PRE/POST BACKUP HOOKS
# ========================================
#
# Configure hooks in restic_backup_sources:
#
# restic_backup_sources:
#   - name: "database-server"
#     path: "/var/lib/postgresql"
#     tags: ["database", "postgres"]
#     enabled: true
#     pre_backup_commands:
#       - "pg_dump dbname > /var/backups/dbname.sql"
#     post_backup_commands:
#       - "rm -f /var/backups/dbname.sql"
#     stop_services:
#       - postgresql
#     start_services:
#       - postgresql
#
# Hooks are executed as shell scripts via systemd ExecStartPre/ExecStopPost
#
