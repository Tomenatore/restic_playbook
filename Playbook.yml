---
# playbook.yml
# ========================================
# Restic Backup Playbook (Systemd-Based)
# ========================================

- name: Deploy Restic Backup System
  hosts: all
  become: yes

  roles:
    - restic

# ========================================
# CONFIGURATION
# ========================================
#
# Configure the role in:
# - group_vars/all/vars.yml         (General settings)
# - group_vars/all/vault.yml        (Encrypted secrets)
# - inventory/hosts.ini             (Server list)
# - group_vars/<group>/vars.yml     (Group-specific)
#
# ========================================
# SYSTEMD DEPLOYMENT
# ========================================
#
# This playbook deploys systemd units and timers.
# Backups are NOT executed by Ansible but by systemd timers.
#
# Deployment:
#   ansible-playbook playbook.yml --ask-vault-pass
#
# Syntax check:
#   ansible-playbook playbook.yml --syntax-check
#
# Dry-run:
#   ansible-playbook playbook.yml --check --ask-vault-pass
#
# ========================================
# SYSTEMD MANAGEMENT
# ========================================
#
# List all restic timers:
#   systemctl list-timers 'restic-*'
#
# Check status of specific backup:
#   systemctl status restic-backup@var-www.timer
#   systemctl status restic-backup@var-www.service
#
# View logs:
#   journalctl -u 'restic-backup@*' -f
#   journalctl -u restic-backup@var-www.service
#
# Manual trigger:
#   systemctl start restic-backup@var-www.service
#
# Enable/disable timers:
#   systemctl enable restic-backup@var-www.timer
#   systemctl disable restic-backup@var-www.timer
#
# ========================================
# MONITORING
# ========================================
#
# Check_MK integration:
#   - Each systemd unit reports to CheckMK with custom tags
#   - Service names: Restic_backup_<source>, Restic_prune_<source>, etc.
#   - Spool directory: /var/lib/check_mk_agent/spool
#
# Syslog:
#   - All operations logged to syslog with tag 'restic'
#   - Facility: local0
#
# ========================================
# PRE/POST BACKUP HOOKS
# ========================================
#
# Uses Restic's native hook system (RESTIC_PRE_SCRIPT, RESTIC_POST_SCRIPT)
# See hooks/pre-backup-example.sh and hooks/post-backup-example.sh for examples
#
# Option 1: Global hooks directory
#   restic_custom_hooks_dir: "{{ playbook_dir }}/hooks"
#   (Creates hooks: pre-backup-<source>.sh, post-backup-<source>.sh)
#
# Option 2: Per-source hook scripts
#   restic_backup_sources:
#     - name: "database"
#       path: "/var/lib/postgresql"
#       hook_pre_script: "{{ playbook_dir }}/hooks/db-pre-backup.sh"
#       hook_post_script: "{{ playbook_dir }}/hooks/db-post-backup.sh"
#
# Option 3: Manual management
#   Create hooks directly on target hosts in /etc/restic/hooks/
#
